language: python

services: docker
dist: xenial

notifications:
  email: false

addons:
  apt:
    packages:
      - libhdf5-serial-dev

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/hdf5
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

env:
  global:
    - HDF5_CACHE_DIR=$HOME/.cache/hdf5

matrix:
  include:
    # needed to work around https://github.com/travis-ci/travis-ci/issues/4794
    # TODO: We should see if we can replace this with installing python via pyenv # based on toxenv
    # Test on ppc64le
    #- python: 3.7
    #  env:
    #  - TOXENV=py37-test-deps
    #  - HDF5_VERSION=1.10.5
    #  - HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
    #  - H5PY_ENFORCE_COVERAGE=yes
    #  os: linux-ppc64le
    
    - os: linux
      python: 3.6
        #virt: vm
        #group: edge
      arch: arm64
      #install: if [[ $PLAT == aarch64 ]]; then uname -m; docker pull $DOCKER_IMAGE; fi
      # script: if [[ $PLAT == aarch64 ]]; then docker run --rm -e PLAT=$PLAT -e PYTHON=$PYTHON -v $(realpath .):/src $DOCKER_IMAGE /src/ci/build-arm64-wheels.sh; fi
      #script: ci/build-arm64-wheels.sh
      env:
        - TOXENV=py36-test-deps
        #- HDF5_VERSION=1.10.5
        #- HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
        #- H5PY_ENFORCE_COVERAGE=yes
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64:latest
        - PLAT=aarch64
        - PYTHON=cp36-cp36m
    - os: linux
      python: 3.7
        #virt: vm
        #group: edge
      arch: arm64
      #install: if [[ $PLAT == aarch64 ]]; then uname -m; docker pull $DOCKER_IMAGE; fi
      # script: if [[ $PLAT == aarch64 ]]; then docker run --rm -e PLAT=$PLAT -e PYTHON=$PYTHON -v $(realpath .):/src $DOCKER_IMAGE /src/ci/build-arm64-wheels.sh; fi
      #script: ci/build-arm64-wheels.sh
      env:
        - TOXENV=py37-test-deps
        #- HDF5_VERSION=1.10.5
        #- HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
        #- H5PY_ENFORCE_COVERAGE=yes
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64:latest
        - PLAT=aarch64
        - PYTHON=cp37-cp37m
    - os: linux
      python: 3.8
      #virt: vm
      #group: edge
      arch: arm64
      env:
        - TOXENV=py38-test-deps
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64:latest
        - PLAT=aarch64
        - PYTHON=cp38-cp38
        #- HDF5_VERSION=1.10.5
        #- HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
        #- H5PY_ENFORCE_COVERAGE=yes
    - os: linux
      python: 3.9
        #virt: vm
        #group: edge
      arch: arm64
      #install: if [[ $PLAT == aarch64 ]]; then uname -m; docker pull $DOCKER_IMAGE; fi
      # script: if [[ $PLAT == aarch64 ]]; then docker run --rm -e PLAT=$PLAT -e PYTHON=$PYTHON -v $(realpath .):/src $DOCKER_IMAGE /src/ci/build-arm64-wheels.sh; fi
      #script: ci/build-arm64-wheels.sh
      env:
        - TOXENV=py39-test-deps
        #- HDF5_VERSION=1.10.5
        #- HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
        #- H5PY_ENFORCE_COVERAGE=yes
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64:latest
        - PLAT=aarch64
        - PYTHON=cp39-cp39
before_install:
  # - export PATH=/usr/lib/ccache:$PATH
  - ccache -s

install:
  - pip install -U tox codecov virtualenv
  - ci/get_hdf5_if_needed.sh
  - ls -lRa $HDF5_CACHE_DIR
  - if [[ $PLAT == aarch64 ]]; then uname -m; docker pull $DOCKER_IMAGE; fi
script:
  - tox
  - if [[ $PLAT == aarch64 ]]; then docker run --rm -e PLAT=$PLAT -e PYTHON=$PYTHON -v $(realpath .):/src $DOCKER_IMAGE /src/ci/build-arm64-wheels.sh; fi

after_success:
  - python ci/upload_coverage.py
