language: python

dist: xenial

notifications:
  email: false

addons:
  apt:
    packages:
      - libhdf5-serial-dev

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/hdf5
    - $HOME/.ccache  # https://github.com/travis-ci/travis-ci/issues/5853

env:
  global:
    - HDF5_CACHE_DIR=$HOME/.cache/hdf5
    - ANACONDA_ORG="test-upload"
    - secure: IEU1UdM1zo1V9s/R8NZ8GLXz8/ODVo6lEXLRJthlxBdIM64JoyIFzU5tQl8VSvykzga1nfL57cPNAkGDE6eJZMkjYMjbehrBLJqqAJXWK/9+t1UJ1L91Z6Y9b+DOkTcUJMAKv5eJAUdia9F2ITKBKpO7FzATLf6bZrF4LWMKYhg=
matrix:
  include:
    # needed to work around https://github.com/travis-ci/travis-ci/issues/4794
    # TODO: We should see if we can replace this with installing python via pyenv # based on toxenv
    # Test on ppc64le
    - python: 3.7
      env:
      - TOXENV=py37-test-deps
      - HDF5_VERSION=1.10.5
      - HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
      - H5PY_ENFORCE_COVERAGE=yes
      os: linux-ppc64le
    - os: linux
      python: 3.7
      virt: vm
      group: edge
      arch: arm64
      env:
        - TOXENV=py37-test-deps
        - HDF5_VERSION=1.10.5
        - HDF5_DIR=$HDF5_CACHE_DIR/$HDF5_VERSION
        - H5PY_ENFORCE_COVERAGE=yes
        - PLAT=aarch64
        - DOCKER_IMAGE=quay.io/pypa/manylinux2014_aarch64:latest
  before_install:
  # - export PATH=/usr/lib/ccache:$PATH
  - ccache -s

install:
  - pip install -U tox codecov virtualenv
  - ci/get_hdf5_if_needed.sh
  - ls -lRa $HDF5_CACHE_DIR
  - if [[ $PLAT == aarch64 ]]; then uname -m; docker pull $DOCKER_IMAGE; fi

script:
  - tox
  - if [[ $PLAT == aarch64 ]]; then docker run --rm -e PLAT=$PLAT -e PYTHON=$PYTHON -v $(realpath .):/src $DOCKER_IMAGE /src/ci/build-arm64-wheels.sh; fi

after_success:
  - python ci/upload_coverage.py
  # trigger an upload to the shared ecosystem
  # infrastructure at: https://anaconda.org/scipy-wheels-nightly
  # for cron jobs only (restricted to master branch once
  # per week)
  # MATPLOTLIB_WHEELS_NIGHTLY is a secret token
  # used in Travis CI config, originally
  # generated at anaconda.org for scipy-wheels-nightly
  - if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
        ANACONDA_ORG="scipy-wheels-nightly"
        pip install git+https://github.com/Anaconda-Server/anaconda-client;
        anaconda -t ${SCIPY_WHEELS_NIGHTLY_ACCESS} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/h5py-*.whl;
    fi
  # for merges (push events) we use the staging area instead;
  # MATPLOTLIB_STAGING_UPLOAD_TOKEN is a secret token used in Travis
  # CI config, originally generated at anaconda.org for
  # multibuild-wheels-staging
  - if [ "$TRAVIS_EVENT_TYPE" == "push" ]; then
        ANACONDA_ORG="multibuild-wheels-staging"
        pip install git+https://github.com/Anaconda-Server/anaconda-client;
        anaconda -t ${MULTIBUILD_WHEELS_STAGING_ACCESS} upload --force -u ${ANACONDA_ORG} ${TRAVIS_BUILD_DIR}/wheelhouse/h5py-*.whl;
    fi
